*,
:before,
:after {
    box-sizing: border-box;
    border-width: 0;
    border-style: solid;
    border-color: #e5e7eb;
}
:before,
:after {
    --tw-content: "";
}
html,
:host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
    -o-tab-size: 4;
    tab-size: 4;
    font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
        "Segoe UI Emoji", Segoe UI Symbol, "Noto Color Emoji";
    font-feature-settings: normal;
    font-variation-settings: normal;
    -webkit-tap-highlight-color: transparent;
}
body {
    margin: 0;
    line-height: inherit;
}
hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
}
abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
}
h1,
h2,
h3,
h4,
h5,
h6 {
    font-size: inherit;
    font-weight: inherit;
}
a {
    color: inherit;
    text-decoration: inherit;
}
b,
strong {
    font-weight: bolder;
}
code,
kbd,
samp,
pre {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
        Liberation Mono, Courier New, monospace;
    font-feature-settings: normal;
    font-variation-settings: normal;
    font-size: 1em;
}
small {
    font-size: 80%;
}
sub,
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}
sub {
    bottom: -0.25em;
}
sup {
    top: -0.5em;
}
table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
}
button,
input,
optgroup,
select,
textarea {
    font-family: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    font-size: 100%;
    font-weight: inherit;
    line-height: inherit;
    color: inherit;
    margin: 0;
    padding: 0;
}
button,
select {
    text-transform: none;
}
button,
[type="button"],
[type="reset"],
[type="submit"] {
    -webkit-appearance: button;
    background-color: transparent;
    background-image: none;
}
:-moz-focusring {
    outline: auto;
}
:-moz-ui-invalid {
    box-shadow: none;
}
progress {
    vertical-align: baseline;
}
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
    height: auto;
}
[type="search"] {
    -webkit-appearance: textfield;
    outline-offset: -2px;
}
::-webkit-search-decoration {
    -webkit-appearance: none;
}
::-webkit-file-upload-button {
    -webkit-appearance: button;
    font: inherit;
}
summary {
    display: list-item;
}
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
    margin: 0;
}
fieldset {
    margin: 0;
    padding: 0;
}
legend {
    padding: 0;
}
ol,
ul,
menu {
    list-style: none;
    margin: 0;
    padding: 0;
}
dialog {
    padding: 0;
}
textarea {
    resize: vertical;
}
input::-moz-placeholder,
textarea::-moz-placeholder {
    opacity: 1;
    color: #9ca3af;
}
input::placeholder,
textarea::placeholder {
    opacity: 1;
    color: #9ca3af;
}
button,
[role="button"] {
    cursor: pointer;
}
:disabled {
    cursor: default;
}
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
    display: block;
    vertical-align: middle;
}
img,
video {
    max-width: 100%;
    height: auto;
}
[hidden] {
    display: none;
}
:root,
[data-theme] {
    background-color: var(--fallback-b1, oklch(var(--b1) / 1));
    color: var(--fallback-bc, oklch(var(--bc) / 1));
}
@supports not (color: oklch(0 0 0)) {
    :root {
        color-scheme: light;
        --fallback-p: #491eff;
        --fallback-pc: #d4dbff;
        --fallback-s: #ff41c7;
        --fallback-sc: #fff9fc;
        --fallback-a: #00cfbd;
        --fallback-ac: #00100d;
        --fallback-n: #2b3440;
        --fallback-nc: #d7dde4;
        --fallback-b1: #ffffff;
        --fallback-b2: #e5e6e6;
        --fallback-b3: #e5e6e6;
        --fallback-bc: #1f2937;
        --fallback-in: #00b3f0;
        --fallback-inc: #000000;
        --fallback-su: #00ca92;
        --fallback-suc: #000000;
        --fallback-wa: #ffc22d;
        --fallback-wac: #000000;
        --fallback-er: #ff6f70;
        --fallback-erc: #000000;
    }
    @media (prefers-color-scheme: dark) {
        :root {
            color-scheme: dark;
            --fallback-p: #7582ff;
            --fallback-pc: #050617;
            --fallback-s: #ff71cf;
            --fallback-sc: #190211;
            --fallback-a: #00c7b5;
            --fallback-ac: #000e0c;
            --fallback-n: #2a323c;
            --fallback-nc: #a6adbb;
            --fallback-b1: #1d232a;
            --fallback-b2: #191e24;
            --fallback-b3: #15191e;
            --fallback-bc: #a6adbb;
            --fallback-in: #00b3f0;
            --fallback-inc: #000000;
            --fallback-su: #00ca92;
            --fallback-suc: #000000;
            --fallback-wa: #ffc22d;
            --fallback-wac: #000000;
            --fallback-er: #ff6f70;
            --fallback-erc: #000000;
        }
    }
}
html {
    -webkit-tap-highlight-color: transparent;
}
:root {
    color-scheme: light;
    --in: 0.7206 0.191 231.6;
    --su: 64.8% 0.15 160;
    --wa: 0.8471 0.199 83.87;
    --er: 0.7176 0.221 22.18;
    --pc: 0.89824 0.06192 275.75;
    --ac: 0.15352 0.0368 183.61;
    --inc: 0 0 0;
    --suc: 0 0 0;
    --wac: 0 0 0;
    --erc: 0 0 0;
    --rounded-box: 1rem;
    --rounded-btn: 0.5rem;
    --rounded-badge: 1.9rem;
    --animation-btn: 0.25s;
    --animation-input: 0.2s;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --p: 0.4912 0.3096 275.75;
    --s: 0.6971 0.329 342.55;
    --sc: 0.9871 0.0106 342.55;
    --a: 0.7676 0.184 183.61;
    --n: 0.321785 0.02476 255.701624;
    --nc: 0.894994 0.011585 252.096176;
    --b1: 1 0 0;
    --b2: 0.961151 0 0;
    --b3: 0.924169 0.00108 197.137559;
    --bc: 0.278078 0.029596 256.847952;
}
@media (prefers-color-scheme: dark) {
    :root {
        color-scheme: dark;
        --in: 0.7206 0.191 231.6;
        --su: 64.8% 0.15 160;
        --wa: 0.8471 0.199 83.87;
        --er: 0.7176 0.221 22.18;
        --pc: 0.13138 0.0392 275.75;
        --sc: 0.1496 0.052 342.55;
        --ac: 0.14902 0.0334 183.61;
        --inc: 0 0 0;
        --suc: 0 0 0;
        --wac: 0 0 0;
        --erc: 0 0 0;
        --rounded-box: 1rem;
        --rounded-btn: 0.5rem;
        --rounded-badge: 1.9rem;
        --animation-btn: 0.25s;
        --animation-input: 0.2s;
        --btn-focus-scale: 0.95;
        --border-btn: 1px;
        --tab-border: 1px;
        --tab-radius: 0.5rem;
        --p: 0.6569 0.196 275.75;
        --s: 0.748 0.26 342.55;
        --a: 0.7451 0.167 183.61;
        --n: 0.313815 0.021108 254.139175;
        --nc: 0.746477 0.0216 264.435964;
        --b1: 0.253267 0.015896 252.417568;
        --b2: 0.232607 0.013807 253.100675;
        --b3: 0.211484 0.01165 254.087939;
        --bc: 0.746477 0.0216 264.435964;
    }
}
[data-theme="light"] {
    color-scheme: light;
    --in: 0.7206 0.191 231.6;
    --su: 64.8% 0.15 160;
    --wa: 0.8471 0.199 83.87;
    --er: 0.7176 0.221 22.18;
    --pc: 0.89824 0.06192 275.75;
    --ac: 0.15352 0.0368 183.61;
    --inc: 0 0 0;
    --suc: 0 0 0;
    --wac: 0 0 0;
    --erc: 0 0 0;
    --rounded-box: 1rem;
    --rounded-btn: 0.5rem;
    --rounded-badge: 1.9rem;
    --animation-btn: 0.25s;
    --animation-input: 0.2s;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --p: 0.4912 0.3096 275.75;
    --s: 0.6971 0.329 342.55;
    --sc: 0.9871 0.0106 342.55;
    --a: 0.7676 0.184 183.61;
    --n: 0.321785 0.02476 255.701624;
    --nc: 0.894994 0.011585 252.096176;
    --b1: 1 0 0;
    --b2: 0.961151 0 0;
    --b3: 0.924169 0.00108 197.137559;
    --bc: 0.278078 0.029596 256.847952;
}
[data-theme="dark"] {
    color-scheme: dark;
    --in: 0.7206 0.191 231.6;
    --su: 64.8% 0.15 160;
    --wa: 0.8471 0.199 83.87;
    --er: 0.7176 0.221 22.18;
    --pc: 0.13138 0.0392 275.75;
    --sc: 0.1496 0.052 342.55;
    --ac: 0.14902 0.0334 183.61;
    --inc: 0 0 0;
    --suc: 0 0 0;
    --wac: 0 0 0;
    --erc: 0 0 0;
    --rounded-box: 1rem;
    --rounded-btn: 0.5rem;
    --rounded-badge: 1.9rem;
    --animation-btn: 0.25s;
    --animation-input: 0.2s;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --p: 0.6569 0.196 275.75;
    --s: 0.748 0.26 342.55;
    --a: 0.7451 0.167 183.61;
    --n: 0.313815 0.021108 254.139175;
    --nc: 0.746477 0.0216 264.435964;
    --b1: 0.253267 0.015896 252.417568;
    --b2: 0.232607 0.013807 253.100675;
    --b3: 0.211484 0.01165 254.087939;
    --bc: 0.746477 0.0216 264.435964;
}
[data-theme="cupcake"] {
    color-scheme: light;
    --in: 0.7206 0.191 231.6;
    --su: 64.8% 0.15 160;
    --wa: 0.8471 0.199 83.87;
    --er: 0.7176 0.221 22.18;
    --pc: 0.152344 0.017892 200.026556;
    --sc: 0.15787 0.020249 356.29965;
    --ac: 0.158762 0.029206 78.618794;
    --nc: 0.847148 0.013247 313.189598;
    --inc: 0 0 0;
    --suc: 0 0 0;
    --wac: 0 0 0;
    --erc: 0 0 0;
    --rounded-box: 1rem;
    --rounded-badge: 1.9rem;
    --animation-btn: 0.25s;
    --animation-input: 0.2s;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --p: 0.76172 0.089459 200.026556;
    --s: 0.789351 0.101246 356.29965;
    --a: 0.793811 0.146032 78.618794;
    --n: 0.235742 0.066235 313.189598;
    --b1: 0.977882 0.00418 56.375637;
    --b2: 0.939822 0.007638 61.449292;
    --b3: 0.915861 0.006811 53.440502;
    --bc: 0.235742 0.066235 313.189598;
    --rounded-btn: 1.9rem;
    --tab-border: 2px;
    --tab-radius: 0.7rem;
}
[data-theme="emerald"] {
    color-scheme: light;
    --b2: 0.93 0 0;
    --b3: 0.86 0 0;
    --in: 0.7206 0.191 231.6;
    --su: 64.8% 0.15 160;
    --wa: 0.8471 0.199 83.87;
    --er: 0.7176 0.221 22.18;
    --inc: 0 0 0;
    --suc: 0 0 0;
    --wac: 0 0 0;
    --erc: 0 0 0;
    --rounded-box: 1rem;
    --rounded-btn: 0.5rem;
    --rounded-badge: 1.9rem;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --p: 0.766626 0.135433 153.450024;
    --pc: 0.333872 0.040618 162.240129;
    --s: 0.613028 0.202368 261.294233;
    --sc: 1 0 0;
    --a: 0.727725 0.149783 33.200363;
    --ac: 0 0 0;
    --n: 0.355192 0.032071 262.988584;
    --nc: 0.984625 0.001706 247.838921;
    --b1: 1 0 0;
    --bc: 0.355192 0.032071 262.988584;
    --animation-btn: 0;
    --animation-input: 0;
    --btn-focus-scale: 1;
}
*,
:before,
:after {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x: ;
    --tw-pan-y: ;
    --tw-pinch-zoom: ;
    --tw-scroll-snap-strictness: proximity;
    --tw-gradient-from-position: ;
    --tw-gradient-via-position: ;
    --tw-gradient-to-position: ;
    --tw-ordinal: ;
    --tw-slashed-zero: ;
    --tw-numeric-figure: ;
    --tw-numeric-spacing: ;
    --tw-numeric-fraction: ;
    --tw-ring-inset: ;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgb(59 130 246 / 0.5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur: ;
    --tw-brightness: ;
    --tw-contrast: ;
    --tw-grayscale: ;
    --tw-hue-rotate: ;
    --tw-invert: ;
    --tw-saturate: ;
    --tw-sepia: ;
    --tw-drop-shadow: ;
    --tw-backdrop-blur: ;
    --tw-backdrop-brightness: ;
    --tw-backdrop-contrast: ;
    --tw-backdrop-grayscale: ;
    --tw-backdrop-hue-rotate: ;
    --tw-backdrop-invert: ;
    --tw-backdrop-opacity: ;
    --tw-backdrop-saturate: ;
    --tw-backdrop-sepia: ;
}
::backdrop {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x: ;
    --tw-pan-y: ;
    --tw-pinch-zoom: ;
    --tw-scroll-snap-strictness: proximity;
    --tw-gradient-from-position: ;
    --tw-gradient-via-position: ;
    --tw-gradient-to-position: ;
    --tw-ordinal: ;
    --tw-slashed-zero: ;
    --tw-numeric-figure: ;
    --tw-numeric-spacing: ;
    --tw-numeric-fraction: ;
    --tw-ring-inset: ;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgb(59 130 246 / 0.5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur: ;
    --tw-brightness: ;
    --tw-contrast: ;
    --tw-grayscale: ;
    --tw-hue-rotate: ;
    --tw-invert: ;
    --tw-saturate: ;
    --tw-sepia: ;
    --tw-drop-shadow: ;
    --tw-backdrop-blur: ;
    --tw-backdrop-brightness: ;
    --tw-backdrop-contrast: ;
    --tw-backdrop-grayscale: ;
    --tw-backdrop-hue-rotate: ;
    --tw-backdrop-invert: ;
    --tw-backdrop-opacity: ;
    --tw-backdrop-saturate: ;
    --tw-backdrop-sepia: ;
}
.container {
    width: 100%;
    margin-right: auto;
    margin-left: auto;
    padding-right: 2rem;
    padding-left: 2rem;
}
@media (min-width: 640px) {
    .container {
        max-width: 640px;
    }
}
@media (min-width: 768px) {
    .container {
        max-width: 768px;
    }
}
@media (min-width: 1024px) {
    .container {
        max-width: 1024px;
    }
}
@media (min-width: 1280px) {
    .container {
        max-width: 1280px;
    }
}
@media (min-width: 1536px) {
    .container {
        max-width: 1536px;
    }
}
.prose {
    color: var(--tw-prose-body);
    max-width: 65ch;
}
.prose :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
}
.prose
    :where([class~="lead"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-links);
    text-decoration: underline;
    font-weight: 500;
}
.prose
    :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600;
}
.prose
    :where(a strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
}
.prose
    :where(blockquote strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
}
.prose
    :where(thead th strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
}
.prose :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: decimal;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
}
.prose
    :where(ol[type="A"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-alpha;
}
.prose
    :where(ol[type="a"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-alpha;
}
.prose
    :where(ol[type="A s"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-alpha;
}
.prose
    :where(ol[type="a s"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-alpha;
}
.prose
    :where(ol[type="I"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-roman;
}
.prose
    :where(ol[type="i"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-roman;
}
.prose
    :where(ol[type="I s"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-roman;
}
.prose
    :where(ol[type="i s"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-roman;
}
.prose
    :where(ol[type="1"]):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: decimal;
}
.prose :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: disc;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
}
.prose
    :where(ol > li):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    )::marker {
    font-weight: 400;
    color: var(--tw-prose-counters);
}
.prose
    :where(ul > li):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    )::marker {
    color: var(--tw-prose-bullets);
}
.prose :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.25em;
}
.prose :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em;
}
.prose
    :where(blockquote):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-weight: 500;
    font-style: italic;
    color: var(--tw-prose-quotes);
    border-left-width: 0.25rem;
    border-left-color: var(--tw-prose-quote-borders);
    quotes: "“" "”" "‘" "’";
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-left: 1em;
}
.prose
    :where(blockquote p:first-of-type):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ):before {
    content: open-quote;
}
.prose
    :where(blockquote p:last-of-type):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ):after {
    content: close-quote;
}
.prose :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 800;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
}
.prose
    :where(h1 strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-weight: 900;
    color: inherit;
}
.prose :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 700;
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333;
}
.prose
    :where(h2 strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-weight: 800;
    color: inherit;
}
.prose :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    line-height: 1.6;
}
.prose
    :where(h3 strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-weight: 700;
    color: inherit;
}
.prose :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    line-height: 1.5;
}
.prose
    :where(h4 strong):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-weight: 700;
    color: inherit;
}
.prose :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
}
.prose
    :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    display: block;
    margin-top: 2em;
    margin-bottom: 2em;
}
.prose :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: 500;
    font-family: inherit;
    color: var(--tw-prose-kbd);
    box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%),
        0 3px rgb(var(--tw-prose-kbd-shadows) / 10%);
    font-size: 0.875em;
    border-radius: 0.3125rem;
    padding: 0.1875em 0.375em;
}
.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-code);
    font-weight: 600;
    font-size: 0.875em;
}
.prose
    :where(code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ):before {
    content: "`";
}
.prose
    :where(code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ):after {
    content: "`";
}
.prose
    :where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
}
.prose
    :where(h1 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
}
.prose
    :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: 0.875em;
}
.prose
    :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: 0.9em;
}
.prose
    :where(h4 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
}
.prose
    :where(blockquote code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
}
.prose
    :where(thead th code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
}
.prose :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    overflow-x: auto;
    font-weight: 400;
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 0.375rem;
    padding: 0.8571429em 1.1428571em;
}
.prose
    :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
}
.prose
    :where(pre code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ):before {
    content: none;
}
.prose
    :where(pre code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ):after {
    content: none;
}
.prose :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    width: 100%;
    table-layout: auto;
    text-align: left;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders);
}
.prose
    :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    vertical-align: bottom;
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
}
.prose
    :where(tbody tr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
}
.prose
    :where(tbody tr:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    border-bottom-width: 0;
}
.prose
    :where(tbody td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    vertical-align: baseline;
}
.prose :where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders);
}
.prose
    :where(tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    vertical-align: top;
}
.prose
    :where(figure > *):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
}
.prose
    :where(figcaption):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: var(--tw-prose-captions);
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
}
.prose {
    --tw-prose-body: #374151;
    --tw-prose-headings: #111827;
    --tw-prose-lead: #4b5563;
    --tw-prose-links: #111827;
    --tw-prose-bold: #111827;
    --tw-prose-counters: #6b7280;
    --tw-prose-bullets: #d1d5db;
    --tw-prose-hr: #e5e7eb;
    --tw-prose-quotes: #111827;
    --tw-prose-quote-borders: #e5e7eb;
    --tw-prose-captions: #6b7280;
    --tw-prose-kbd: #111827;
    --tw-prose-kbd-shadows: 17 24 39;
    --tw-prose-code: #111827;
    --tw-prose-pre-code: #e5e7eb;
    --tw-prose-pre-bg: #1f2937;
    --tw-prose-th-borders: #d1d5db;
    --tw-prose-td-borders: #e5e7eb;
    --tw-prose-invert-body: #d1d5db;
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: #9ca3af;
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: #9ca3af;
    --tw-prose-invert-bullets: #4b5563;
    --tw-prose-invert-hr: #374151;
    --tw-prose-invert-quotes: #f3f4f6;
    --tw-prose-invert-quote-borders: #374151;
    --tw-prose-invert-captions: #9ca3af;
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: #d1d5db;
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: #4b5563;
    --tw-prose-invert-td-borders: #374151;
    font-size: 1rem;
    line-height: 1.75;
}
.prose
    :where(picture > img):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
}
.prose :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
}
.prose :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
}
.prose
    :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-left: 0.375em;
}
.prose
    :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-left: 0.375em;
}
.prose
    :where(.prose > ul > li p):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
}
.prose
    :where(.prose > ul > li > *:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.25em;
}
.prose
    :where(.prose > ul > li > *:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.25em;
}
.prose
    :where(.prose > ol > li > *:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.25em;
}
.prose
    :where(.prose > ol > li > *:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.25em;
}
.prose
    :where(ul ul, ul ol, ol ul, ol ol):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
}
.prose :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
}
.prose :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.5em;
    padding-left: 1.625em;
}
.prose
    :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
}
.prose
    :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
}
.prose
    :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
}
.prose
    :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
}
.prose
    :where(thead th:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-left: 0;
}
.prose
    :where(thead th:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-right: 0;
}
.prose
    :where(tbody td, tfoot td):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding: 0.5714286em;
}
.prose
    :where(tbody td:first-child, tfoot td:first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-left: 0;
}
.prose
    :where(tbody td:last-child, tfoot td:last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-right: 0;
}
.prose
    :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
}
.prose
    :where(.prose > :first-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
}
.prose
    :where(.prose > :last-child):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 0;
}
.prose-emerald {
    --tw-prose-links: #059669;
    --tw-prose-invert-links: #10b981;
}
.avatar {
    position: relative;
    display: inline-flex;
}
.avatar > div {
    display: block;
    aspect-ratio: 1 / 1;
    overflow: hidden;
}
.avatar img {
    height: 100%;
    width: 100%;
    -o-object-fit: cover;
    object-fit: cover;
}
.avatar.placeholder > div {
    display: flex;
    align-items: center;
    justify-content: center;
}
@media (hover: hover) {
    .label a:hover {
        --tw-text-opacity: 1;
        color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
    }
    .table tr.hover:hover,
    .table tr.hover:nth-child(2n):hover {
        --tw-bg-opacity: 1;
        background-color: var(
            --fallback-b2,
            oklch(var(--b2) / var(--tw-bg-opacity))
        );
    }
}
.btn {
    display: inline-flex;
    height: 3rem;
    min-height: 3rem;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    border-radius: var(--rounded-btn, 0.5rem);
    border-color: transparent;
    border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
    padding-left: 1rem;
    padding-right: 1rem;
    text-align: center;
    font-size: 0.875rem;
    line-height: 1em;
    gap: 0.5rem;
    font-weight: 600;
    text-decoration-line: none;
    transition-duration: 0.2s;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    border-width: var(--border-btn, 1px);
    animation: button-pop var(--animation-btn, 0.25s) ease-out;
    transition-property: color, background-color, border-color, opacity,
        box-shadow, transform;
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
    --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
        var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    outline-color: var(--fallback-bc, oklch(var(--bc) / 1));
    background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
    --tw-bg-opacity: 1;
    --tw-border-opacity: 1;
}
.btn-disabled,
.btn[disabled],
.btn:disabled {
    pointer-events: none;
}
.btn-circle {
    height: 3rem;
    width: 3rem;
    border-radius: 9999px;
    padding: 0;
}
:where(.btn:is(input[type="checkbox"])),
:where(.btn:is(input[type="radio"])) {
    width: auto;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}
.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
    --tw-content: attr(aria-label);
    content: var(--tw-content);
}
.card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
}
.card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}
.card-body {
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    padding: var(--padding-card, 2rem);
    gap: 0.5rem;
}
.card-body :where(p) {
    flex-grow: 1;
}
.card-actions {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    gap: 0.5rem;
}
.card figure {
    display: flex;
    align-items: center;
    justify-content: center;
}
.card.image-full {
    display: grid;
}
.card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
    opacity: 0.75;
}
.card.image-full:before,
.card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
}
.card.image-full > figure img {
    height: 100%;
    -o-object-fit: cover;
    object-fit: cover;
}
.card.image-full > .card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: var(--fallback-nc, oklch(var(--nc) / var(--tw-text-opacity)));
}
.carousel {
    display: inline-flex;
    overflow-x: scroll;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    -ms-overflow-style: none;
    scrollbar-width: none;
}
.carousel-item {
    box-sizing: content-box;
    display: flex;
    flex: none;
    scroll-snap-align: start;
}
.carousel-center .carousel-item {
    scroll-snap-align: center;
}
.carousel-end .carousel-item {
    scroll-snap-align: end;
}
@media (hover: hover) {
    .btn:hover {
        --tw-border-opacity: 1;
        border-color: var(
            --fallback-b3,
            oklch(var(--b3) / var(--tw-border-opacity))
        );
        --tw-bg-opacity: 1;
        background-color: var(
            --fallback-b3,
            oklch(var(--b3) / var(--tw-bg-opacity))
        );
    }
    @supports (color: color-mix(in oklab, black, black)) {
        .btn:hover {
            background-color: color-mix(
                in oklab,
                oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
                black
            );
            border-color: color-mix(
                in oklab,
                oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1))
                    90%,
                black
            );
        }
    }
    @supports not (color: oklch(0 0 0)) {
        .btn:hover {
            background-color: var(--btn-color, var(--fallback-b2));
            border-color: var(--btn-color, var(--fallback-b2));
        }
    }
    .btn.glass:hover {
        --glass-opacity: 25%;
        --glass-border-opacity: 15%;
    }
    .btn-outline.btn-success:hover {
        --tw-text-opacity: 1;
        color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
    }
    @supports (color: color-mix(in oklab, black, black)) {
        .btn-outline.btn-success:hover {
            background-color: color-mix(
                in oklab,
                var(--fallback-su, oklch(var(--su) / 1)) 90%,
                black
            );
            border-color: color-mix(
                in oklab,
                var(--fallback-su, oklch(var(--su) / 1)) 90%,
                black
            );
        }
    }
    .btn-outline.btn-warning:hover {
        --tw-text-opacity: 1;
        color: var(--fallback-wac, oklch(var(--wac) / var(--tw-text-opacity)));
    }
    @supports (color: color-mix(in oklab, black, black)) {
        .btn-outline.btn-warning:hover {
            background-color: color-mix(
                in oklab,
                var(--fallback-wa, oklch(var(--wa) / 1)) 90%,
                black
            );
            border-color: color-mix(
                in oklab,
                var(--fallback-wa, oklch(var(--wa) / 1)) 90%,
                black
            );
        }
    }
    .btn-disabled:hover,
    .btn[disabled]:hover,
    .btn:disabled:hover {
        --tw-border-opacity: 0;
        background-color: var(
            --fallback-n,
            oklch(var(--n) / var(--tw-bg-opacity))
        );
        --tw-bg-opacity: 0.2;
        color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
        --tw-text-opacity: 0.2;
    }
    @supports (color: color-mix(in oklab, black, black)) {
        .btn:is(input[type="checkbox"]:checked):hover,
        .btn:is(input[type="radio"]:checked):hover {
            background-color: color-mix(
                in oklab,
                var(--fallback-p, oklch(var(--p) / 1)) 90%,
                black
            );
            border-color: color-mix(
                in oklab,
                var(--fallback-p, oklch(var(--p) / 1)) 90%,
                black
            );
        }
    }
}
.footer {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    place-items: start;
    -moz-column-gap: 1rem;
    column-gap: 1rem;
    row-gap: 2.5rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
}
.footer > * {
    display: grid;
    place-items: start;
    gap: 0.5rem;
}
.footer-center {
    place-items: center;
    text-align: center;
}
.footer-center > * {
    place-items: center;
}
@media (min-width: 48rem) {
    .footer {
        grid-auto-flow: column;
    }
    .footer-center {
        grid-auto-flow: row dense;
    }
}
.form-control {
    display: flex;
    flex-direction: column;
}
.label {
    display: flex;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    align-items: center;
    justify-content: space-between;
    padding: 0.5rem 0.25rem;
}
.hero {
    display: grid;
    width: 100%;
    place-items: center;
    background-size: cover;
    background-position: center;
}
.hero > * {
    grid-column-start: 1;
    grid-row-start: 1;
}
.hero-content {
    z-index: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    max-width: 80rem;
    gap: 1rem;
    padding: 1rem;
}
.input {
    flex-shrink: 1;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 1rem;
    line-height: 2;
    line-height: 1.5rem;
    border-radius: var(--rounded-btn, 0.5rem);
    border-width: 1px;
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: var(
        --fallback-b1,
        oklch(var(--b1) / var(--tw-bg-opacity))
    );
}
.input[type="number"]::-webkit-inner-spin-button,
.input-md[type="number"]::-webkit-inner-spin-button {
    margin-top: -1rem;
    margin-bottom: -1rem;
    margin-inline-end: -1rem;
}
.link {
    cursor: pointer;
    text-decoration-line: underline;
}
.mask {
    -webkit-mask-size: contain;
    mask-size: contain;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-position: center;
    mask-position: center;
}
.swap {
    position: relative;
    display: inline-grid;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    place-content: center;
    cursor: pointer;
}
.swap > * {
    grid-column-start: 1;
    grid-row-start: 1;
    transition-duration: 0.3s;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-property: transform, opacity;
}
.swap input {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}
.swap .swap-on,
.swap .swap-indeterminate,
.swap input:indeterminate ~ .swap-on {
    opacity: 0;
}
.swap input:checked ~ .swap-off,
.swap-active .swap-off,
.swap input:indeterminate ~ .swap-off {
    opacity: 0;
}
.swap input:checked ~ .swap-on,
.swap-active .swap-on,
.swap input:indeterminate ~ .swap-indeterminate {
    opacity: 1;
}
.table {
    position: relative;
    width: 100%;
    border-radius: var(--rounded-box, 1rem);
    text-align: left;
    font-size: 0.875rem;
    line-height: 1.25rem;
}
.table :where(.table-pin-rows thead tr) {
    position: sticky;
    top: 0;
    z-index: 1;
    --tw-bg-opacity: 1;
    background-color: var(
        --fallback-b1,
        oklch(var(--b1) / var(--tw-bg-opacity))
    );
}
.table :where(.table-pin-rows tfoot tr) {
    position: sticky;
    bottom: 0;
    z-index: 1;
    --tw-bg-opacity: 1;
    background-color: var(
        --fallback-b1,
        oklch(var(--b1) / var(--tw-bg-opacity))
    );
}
.table :where(.table-pin-cols tr th) {
    position: sticky;
    left: 0;
    right: 0;
    --tw-bg-opacity: 1;
    background-color: var(
        --fallback-b1,
        oklch(var(--b1) / var(--tw-bg-opacity))
    );
}
.avatar-group :where(.avatar) {
    overflow: hidden;
    border-radius: 9999px;
    border-width: 4px;
    --tw-border-opacity: 1;
    border-color: var(
        --fallback-b1,
        oklch(var(--b1) / var(--tw-border-opacity))
    );
}
.btm-nav > * .label {
    font-size: 1rem;
    line-height: 1.5rem;
}
.btn:active:hover,
.btn:active:focus {
    animation: button-pop 0s ease-out;
    transform: scale(var(--btn-focus-scale, 0.97));
}
@supports not (color: oklch(0 0 0)) {
    .btn {
        background-color: var(--btn-color, var(--fallback-b2));
        border-color: var(--btn-color, var(--fallback-b2));
    }
    .btn-success {
        --btn-color: var(--fallback-su);
    }
    .btn-warning {
        --btn-color: var(--fallback-wa);
    }
    .prose :where(code):not(:where([class~="not-prose"] *, pre *)) {
        background-color: var(--fallback-b3, oklch(var(--b3) / 1));
    }
}
@supports (color: color-mix(in oklab, black, black)) {
    .btn-outline.btn-success.btn-active {
        background-color: color-mix(
            in oklab,
            var(--fallback-su, oklch(var(--su) / 1)) 90%,
            black
        );
        border-color: color-mix(
            in oklab,
            var(--fallback-su, oklch(var(--su) / 1)) 90%,
            black
        );
    }
    .btn-outline.btn-warning.btn-active {
        background-color: color-mix(
            in oklab,
            var(--fallback-wa, oklch(var(--wa) / 1)) 90%,
            black
        );
        border-color: color-mix(
            in oklab,
            var(--fallback-wa, oklch(var(--wa) / 1)) 90%,
            black
        );
    }
}
.btn:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
}
@supports (color: oklch(0 0 0)) {
    .btn-success {
        --btn-color: var(--su);
    }
    .btn-warning {
        --btn-color: var(--wa);
    }
}
.btn-success {
    --tw-text-opacity: 1;
    color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
    outline-color: var(--fallback-su, oklch(var(--su) / 1));
}
.btn-warning {
    --tw-text-opacity: 1;
    color: var(--fallback-wac, oklch(var(--wac) / var(--tw-text-opacity)));
    outline-color: var(--fallback-wa, oklch(var(--wa) / 1));
}
.btn.glass {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
        var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    outline-color: currentColor;
}
.btn.glass.btn-active {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%;
}
.btn-outline.btn-success {
    --tw-text-opacity: 1;
    color: var(--fallback-su, oklch(var(--su) / var(--tw-text-opacity)));
}
.btn-outline.btn-success.btn-active {
    --tw-text-opacity: 1;
    color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
}
.btn-outline.btn-warning {
    --tw-text-opacity: 1;
    color: var(--fallback-wa, oklch(var(--wa) / var(--tw-text-opacity)));
}
.btn-outline.btn-warning.btn-active {
    --tw-text-opacity: 1;
    color: var(--fallback-wac, oklch(var(--wac) / var(--tw-text-opacity)));
}
.btn.btn-disabled,
.btn[disabled],
.btn:disabled {
    --tw-border-opacity: 0;
    background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
    --tw-bg-opacity: 0.2;
    color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
    --tw-text-opacity: 0.2;
}
.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p, oklch(var(--p) / var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
}
.btn:is(input[type="checkbox"]:checked):focus-visible,
.btn:is(input[type="radio"]:checked):focus-visible {
    outline-color: var(--fallback-p, oklch(var(--p) / 1));
}
@keyframes button-pop {
    0% {
        transform: scale(var(--btn-focus-scale, 0.98));
    }
    40% {
        transform: scale(1.02);
    }
    to {
        transform: scale(1);
    }
}
.card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset;
}
.card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit;
}
.card:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
}
.card.bordered {
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: var(
        --fallback-b2,
        oklch(var(--b2) / var(--tw-border-opacity))
    );
}
.card.compact .card-body {
    padding: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
}
.card-title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 1.25rem;
    line-height: 1.75rem;
    font-weight: 600;
}
.card.image-full :where(figure) {
    overflow: hidden;
    border-radius: inherit;
}
.carousel::-webkit-scrollbar {
    display: none;
}
@keyframes checkmark {
    0% {
        background-position-y: 5px;
    }
    50% {
        background-position-y: -2px;
    }
    to {
        background-position-y: 0;
    }
}
.label-text {
    font-size: 0.875rem;
    line-height: 1.25rem;
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
}
.input input {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
    background-color: transparent;
}
.input input:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}
.input[list]::-webkit-calendar-picker-indicator {
    line-height: 1em;
}
.input-bordered {
    border-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.input:focus,
.input:focus-within {
    box-shadow: none;
    border-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.input-disabled,
.input:disabled,
.input[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: var(
        --fallback-b2,
        oklch(var(--b2) / var(--tw-border-opacity))
    );
    --tw-bg-opacity: 1;
    background-color: var(
        --fallback-b2,
        oklch(var(--b2) / var(--tw-bg-opacity))
    );
    color: var(--fallback-bc, oklch(var(--bc) / 0.4));
}
.input-disabled::-moz-placeholder,
.input:disabled::-moz-placeholder,
.input[disabled]::-moz-placeholder {
    color: var(--fallback-bc, oklch(var(--bc) / var(--tw-placeholder-opacity)));
    --tw-placeholder-opacity: 0.2;
}
.input-disabled::placeholder,
.input:disabled::placeholder,
.input[disabled]::placeholder {
    color: var(--fallback-bc, oklch(var(--bc) / var(--tw-placeholder-opacity)));
    --tw-placeholder-opacity: 0.2;
}
.input::-webkit-date-and-time-value {
    text-align: inherit;
}
.link:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}
.link:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
}
.mask-squircle {
    -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3e%3c/svg%3e");
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3e%3c/svg%3e");
}
.mockup-phone .display {
    overflow: hidden;
    border-radius: 40px;
    margin-top: -25px;
}
.mockup-browser .mockup-browser-toolbar .input {
    position: relative;
    margin-left: auto;
    margin-right: auto;
    display: block;
    height: 1.75rem;
    width: 24rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    --tw-bg-opacity: 1;
    background-color: var(
        --fallback-b2,
        oklch(var(--b2) / var(--tw-bg-opacity))
    );
    padding-left: 2rem;
    direction: ltr;
}
.mockup-browser .mockup-browser-toolbar .input:before {
    content: "";
    position: absolute;
    left: 0.5rem;
    top: 50%;
    aspect-ratio: 1 / 1;
    height: 0.75rem;
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
        rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
        scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-radius: 9999px;
    border-width: 2px;
    border-color: currentColor;
    opacity: 0.6;
}
.mockup-browser .mockup-browser-toolbar .input:after {
    content: "";
    position: absolute;
    left: 1.25rem;
    top: 50%;
    height: 0.5rem;
    --tw-translate-y: 25%;
    --tw-rotate: -45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
        rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
        scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-radius: 9999px;
    border-width: 1px;
    border-color: currentColor;
    opacity: 0.6;
}
@keyframes modal-pop {
    0% {
        opacity: 0;
    }
}
@keyframes progress-loading {
    50% {
        background-position-x: -115%;
    }
}
@keyframes radiomark {
    0% {
        box-shadow: 0 0 0 12px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
            0 0 0 12px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
    }
    50% {
        box-shadow: 0 0 0 3px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
            0 0 0 3px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
    }
    to {
        box-shadow: 0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
            0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
    }
}
@keyframes rating-pop {
    0% {
        transform: translateY(-0.125em);
    }
    40% {
        transform: translateY(-0.125em);
    }
    to {
        transform: translateY(0);
    }
}
@keyframes skeleton {
    0% {
        background-position: 150%;
    }
    to {
        background-position: -50%;
    }
}
:is([dir="rtl"] .table) {
    text-align: right;
}
.table :where(th, td) {
    padding: 0.75rem 1rem;
    vertical-align: middle;
}
.table tr.active,
.table tr.active:nth-child(2n),
.table-zebra tbody tr:nth-child(2n) {
    --tw-bg-opacity: 1;
    background-color: var(
        --fallback-b2,
        oklch(var(--b2) / var(--tw-bg-opacity))
    );
}
.table :where(thead, tbody) :where(tr:not(:last-child)),
.table :where(thead, tbody) :where(tr:first-child:last-child) {
    border-bottom-width: 1px;
    --tw-border-opacity: 1;
    border-bottom-color: var(
        --fallback-b2,
        oklch(var(--b2) / var(--tw-border-opacity))
    );
}
.table :where(thead, tfoot) {
    white-space: nowrap;
    font-size: 0.75rem;
    line-height: 1rem;
    font-weight: 700;
    color: var(--fallback-bc, oklch(var(--bc) / 0.6));
}
@keyframes toast-pop {
    0% {
        transform: scale(0.9);
        opacity: 0;
    }
    to {
        transform: scale(1);
        opacity: 1;
    }
}
:root .prose {
    --tw-prose-body: var(--fallback-bc, oklch(var(--bc) / 0.8));
    --tw-prose-headings: var(--fallback-bc, oklch(var(--bc) / 1));
    --tw-prose-lead: var(--fallback-bc, oklch(var(--bc) / 1));
    --tw-prose-links: var(--fallback-bc, oklch(var(--bc) / 1));
    --tw-prose-bold: var(--fallback-bc, oklch(var(--bc) / 1));
    --tw-prose-counters: var(--fallback-bc, oklch(var(--bc) / 1));
    --tw-prose-bullets: var(--fallback-bc, oklch(var(--bc) / 0.5));
    --tw-prose-hr: var(--fallback-bc, oklch(var(--bc) / 0.2));
    --tw-prose-quotes: var(--fallback-bc, oklch(var(--bc) / 1));
    --tw-prose-quote-borders: var(--fallback-bc, oklch(var(--bc) / 0.2));
    --tw-prose-captions: var(--fallback-bc, oklch(var(--bc) / 0.5));
    --tw-prose-code: var(--fallback-bc, oklch(var(--bc) / 1));
    --tw-prose-pre-code: var(--fallback-nc, oklch(var(--nc) / 1));
    --tw-prose-pre-bg: var(--fallback-n, oklch(var(--n) / 1));
    --tw-prose-th-borders: var(--fallback-bc, oklch(var(--bc) / 0.5));
    --tw-prose-td-borders: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.prose :where(code):not(:where([class~="not-prose"] *, pre *)) {
    padding: 1px 8px;
    border-radius: var(--rounded-badge);
    font-weight: initial;
    background-color: var(--fallback-bc, oklch(var(--bc) / 0.1));
}
.prose
    :where(code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ):before,
.prose
    :where(code):not(
        :where([class~="not-prose"], [class~="not-prose"] *)
    ):after {
    display: none;
}
.prose pre code {
    border-radius: 0;
    padding: 0;
}
.prose :where(tbody tr, thead):not(:where([class~="not-prose"] *)) {
    border-bottom-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.glass,
.glass.btn-active {
    border: none;
    -webkit-backdrop-filter: blur(var(--glass-blur, 40px));
    backdrop-filter: blur(var(--glass-blur, 40px));
    background-color: transparent;
    background-image: linear-gradient(
            135deg,
            rgb(255 255 255 / var(--glass-opacity, 30%)),
            #0000
        ),
        linear-gradient(
            var(--glass-reflex-degree, 100deg),
            rgb(255 255 255 / var(--glass-reflex-opacity, 10%)) 25%,
            rgb(0 0 0 / 0%) 25%
        );
    box-shadow: 0 0 0 1px rgb(255 255 255 / var(--glass-border-opacity, 10%))
            inset,
        0 0 0 2px #0000000d;
    text-shadow: 0 1px rgb(0 0 0 / var(--glass-text-shadow-opacity, 5%));
}
@media (hover: hover) {
    .glass.btn-active {
        border: none;
        -webkit-backdrop-filter: blur(var(--glass-blur, 40px));
        backdrop-filter: blur(var(--glass-blur, 40px));
        background-color: transparent;
        background-image: linear-gradient(
                135deg,
                rgb(255 255 255 / var(--glass-opacity, 30%)),
                #0000
            ),
            linear-gradient(
                var(--glass-reflex-degree, 100deg),
                rgb(255 255 255 / var(--glass-reflex-opacity, 10%)) 25%,
                rgb(0 0 0 / 0%) 25%
            );
        box-shadow: 0 0 0 1px
                rgb(255 255 255 / var(--glass-border-opacity, 10%)) inset,
            0 0 0 2px #0000000d;
        text-shadow: 0 1px rgb(0 0 0 / var(--glass-text-shadow-opacity, 5%));
    }
}
.btn-wide {
    width: 16rem;
}
.btn-circle:where(.btn-xs) {
    height: 1.5rem;
    width: 1.5rem;
    border-radius: 9999px;
    padding: 0;
}
.btn-circle:where(.btn-sm) {
    height: 2rem;
    width: 2rem;
    border-radius: 9999px;
    padding: 0;
}
.btn-circle:where(.btn-md) {
    height: 3rem;
    width: 3rem;
    border-radius: 9999px;
    padding: 0;
}
.btn-circle:where(.btn-lg) {
    height: 4rem;
    width: 4rem;
    border-radius: 9999px;
    padding: 0;
}
.avatar.online:before {
    content: "";
    position: absolute;
    z-index: 10;
    display: block;
    border-radius: 9999px;
    --tw-bg-opacity: 1;
    background-color: var(
        --fallback-su,
        oklch(var(--su) / var(--tw-bg-opacity))
    );
    outline-style: solid;
    outline-width: 2px;
    outline-color: var(--fallback-b1, oklch(var(--b1) / 1));
    width: 15%;
    height: 15%;
    top: 7%;
    right: 7%;
}
.avatar.offline:before {
    content: "";
    position: absolute;
    z-index: 10;
    display: block;
    border-radius: 9999px;
    --tw-bg-opacity: 1;
    background-color: var(
        --fallback-b3,
        oklch(var(--b3) / var(--tw-bg-opacity))
    );
    outline-style: solid;
    outline-width: 2px;
    outline-color: var(--fallback-b1, oklch(var(--b1) / 1));
    width: 15%;
    height: 15%;
    top: 7%;
    right: 7%;
}
.card-compact .card-body {
    padding: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
}
.card-compact .card-title {
    margin-bottom: 0.25rem;
}
.card-normal .card-body {
    padding: var(--padding-card, 2rem);
    font-size: 1rem;
    line-height: 1.5rem;
}
.card-normal .card-title {
    margin-bottom: 0.75rem;
}
.absolute {
    position: absolute;
}
.relative {
    position: relative;
}
.left-5 {
    left: 1.25rem;
}
.right-5 {
    right: 1.25rem;
}
.top-1\/2 {
    top: 50%;
}
.mx-auto {
    margin-left: auto;
    margin-right: auto;
}
.my-5 {
    margin-top: 1.25rem;
    margin-bottom: 1.25rem;
}
.mb-32 {
    margin-bottom: 8rem;
}
.mb-4 {
    margin-bottom: 1rem;
}
.mt-1 {
    margin-top: 0.25rem;
}
.mt-12 {
    margin-top: 3rem;
}
.mt-5 {
    margin-top: 1.25rem;
}
.block {
    display: block;
}
.flex {
    display: flex;
}
.table {
    display: table;
}
.grid {
    display: grid;
}
.h-12 {
    height: 3rem;
}
.h-32 {
    height: 8rem;
}
.h-36 {
    height: 9rem;
}
.min-h-screen {
    min-height: 100vh;
}
.w-12 {
    width: 3rem;
}
.w-36 {
    width: 9rem;
}
.w-full {
    width: 100%;
}
.max-w-2xl {
    max-width: 42rem;
}
.max-w-4xl {
    max-width: 56rem;
}
.max-w-lg {
    max-width: 32rem;
}
.max-w-sm {
    max-width: 24rem;
}
.max-w-xs {
    max-width: 20rem;
}
.-translate-y-1\/2 {
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
        rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
        scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.transform {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
        rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
        scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.list-outside {
    list-style-position: outside;
}
.list-image-tick {
    list-style-image: url("data:image/svg+xml,%3csvg%20aria-hidden='true'%20class='e-font-icon-svg%20e-fas-check'%20viewBox='0%200%20512%20512'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M173.898%20439.404l-166.4-166.4c-9.997-9.997-9.997-26.206%200-36.204l36.203-36.204c9.997-9.998%2026.207-9.998%2036.204%200L192%20312.69%20432.095%2072.596c9.997-9.997%2026.207-9.997%2036.204%200l36.203%2036.204c9.997%209.997%209.997%2026.206%200%2036.204l-294.4%20294.401c-9.998%209.997-26.207%209.997-36.204-.001z'%3e%3c/path%3e%3c/svg%3e");
}
.grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
}
.flex-col {
    flex-direction: column;
}
.place-items-center {
    place-items: center;
}
.items-center {
    align-items: center;
}
.justify-center {
    justify-content: center;
}
.justify-between {
    justify-content: space-between;
}
.gap-12 {
    gap: 3rem;
}
.gap-3 {
    gap: 0.75rem;
}
.space-y-3 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
}
.space-y-5 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(1.25rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(1.25rem * var(--tw-space-y-reverse));
}
.overflow-x-auto {
    overflow-x: auto;
}
.rounded-lg {
    border-radius: 0.5rem;
}
.bg-gray-200 {
    --tw-bg-opacity: 1;
    background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}
.bg-gray-50 {
    --tw-bg-opacity: 1;
    background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}
.bg-green-100 {
    --tw-bg-opacity: 1;
    background-color: rgb(220 252 231 / var(--tw-bg-opacity));
}
.bg-green-200 {
    --tw-bg-opacity: 1;
    background-color: rgb(187 247 208 / var(--tw-bg-opacity));
}
.bg-slate-950 {
    --tw-bg-opacity: 1;
    background-color: rgb(2 6 23 / var(--tw-bg-opacity));
}
.p-10 {
    padding: 2.5rem;
}
.p-2 {
    padding: 0.5rem;
}
.p-5 {
    padding: 1.25rem;
}
.py-12 {
    padding-top: 3rem;
    padding-bottom: 3rem;
}
.py-3 {
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
}
.pb-16 {
    padding-bottom: 4rem;
}
.pb-20 {
    padding-bottom: 5rem;
}
.text-left {
    text-align: left;
}
.text-center {
    text-align: center;
}
.font-bn {
    font-family: Hind Siliguri, sans-serif;
}
.text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
}
.text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem;
}
.text-xs {
    font-size: 0.75rem;
    line-height: 1rem;
}
.font-bold {
    font-weight: 700;
}
.font-extralight {
    font-weight: 200;
}
.font-medium {
    font-weight: 500;
}
.font-semibold {
    font-weight: 600;
}
.text-accent-content {
    --tw-text-opacity: 1;
    color: var(--fallback-ac, oklch(var(--ac) / var(--tw-text-opacity)));
}
.text-gray-600 {
    --tw-text-opacity: 1;
    color: rgb(75 85 99 / var(--tw-text-opacity));
}
.text-green-700 {
    --tw-text-opacity: 1;
    color: rgb(21 128 61 / var(--tw-text-opacity));
}
.text-green-800 {
    --tw-text-opacity: 1;
    color: rgb(22 101 52 / var(--tw-text-opacity));
}
.text-white {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
}
.shadow-2xl {
    --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
    --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
        var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.required\:border-red-500:required {
    --tw-border-opacity: 1;
    border-color: rgb(239 68 68 / var(--tw-border-opacity));
}
.hover\:border-spacing-6:hover {
    --tw-border-spacing-x: 1.5rem;
    --tw-border-spacing-y: 1.5rem;
    border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y);
}
.hover\:border-4:hover {
    border-width: 4px;
}
.hover\:border-red-800:hover {
    --tw-border-opacity: 1;
    border-color: rgb(153 27 27 / var(--tw-border-opacity));
}
.hover\:shadow-lg:hover {
    --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1),
        0 4px 6px -4px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),
        0 4px 6px -4px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
        var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
